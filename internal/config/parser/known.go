package parser

// List of known environment variables. The first column represents
// internal config (YAML) version in uppercase-dot notation of the configuration
// library.
//
// The second column is optional. When not set, environment variable is the same,
// except "." are replaced with "_". Otherwise the value from the second column
// is used. Examples:
//
// APP_NAME (implicit from APP.NAME)
// APP_INSTANCE_PREFIX (explicitly set)
//
// This is not great solution, but the alternative would be to remove viper dependency.
var known = [][]string{
	{"APP", ""},
	{"APP.NAME", ""},
	{"APP.CACHE", ""},
	{"APP.CACHE.ACCOUNT", ""},
	{"APP.CACHE.TYPEAPPID", "APP.CACHE.TYPE_APP_ID"},
	{"APP.CACHE.EXPIRATION", ""},
	{"APP.CACHE.CLEANUPINTERVAL", "APP_CACHE_CLEANUP_INTERVAL"},
	{"APP.PORT", ""},
	{"APP.VERSION", ""},
	{"APP.COMPRESSION", ""},
	{"APP.INSTANCEPREFIX", "APP_INSTANCE_PREFIX"},
	{"AWS", ""},
	{"AWS.INSTANCEPREFIX", "AWS_INSTANCE_PREFIX"},
	{"AWS.KEY", ""},
	{"AWS.REGION", ""},
	{"AWS.SECRET", ""},
	{"AWS.SESSION", ""},
	{"AWS.DEFAULTREGION", "AWS_DEFAULT_REGION"},
	{"AZURE", ""},
	{"AZURE.TENANTID", "AZURE_TENANT_ID"},
	{"AZURE.SUBSCRIPTIONID", "AZURE_SUBSCRIPTION_ID"},
	{"AZURE.CLIENTID", "AZURE_CLIENT_ID"},
	{"AZURE.CLIENTSECRET", "AZURE_CLIENT_SECRET"},
	{"AZURE.DEFAULTREGION", "AZURE_DEFAULT_REGION"},
	{"GCP", ""},
	{"GCP.JSON", ""},
	{"GCP.DEFAULTZONE", "GCP_DEFAULT_ZONE"},
	{"CLOUDWATCH", ""},
	{"CLOUDWATCH.ENABLED", ""},
	{"CLOUDWATCH.GROUP", ""},
	{"CLOUDWATCH.KEY", ""},
	{"CLOUDWATCH.REGION", ""},
	{"CLOUDWATCH.SECRET", ""},
	{"CLOUDWATCH.SESSION", ""},
	{"CLOUDWATCH.STREAM", ""},
	{"DATABASE", "DATABASE"},
	{"DATABASE.HOST", ""},
	{"DATABASE.LOGLEVEL", "DATABASE_LOG_LEVEL"},
	{"DATABASE.NAME", ""},
	{"DATABASE.PASSWORD", ""},
	{"DATABASE.PORT", ""},
	{"DATABASE.SEEDSCRIPT", "DATABASE_SEED_SCRIPT"},
	{"DATABASE.USER", ""},
	{"FEATUREFLAGS", "FEATURE_FLAGS"},
	{"FEATUREFLAGS.ENVIRONMENT", "FEATURE_FLAGS_ENVIRONMENT"},
	{"FEATUREFLAGS.EXITONPANIC", "FEATURE_FLAGS_EXIT_ON_PANIC"},
	{"LOGGING", ""},
	{"LOGGING.LEVEL", ""},
	{"LOGGING.MAXFIELD", "LOGGING_MAX_FIELD"},
	{"LOGGING.STDOUT", ""},
	{"PROMETHEUS", ""},
	{"PROMETHEUS.PATH", ""},
	{"PROMETHEUS.PORT", ""},
	{"RESTENDPOINTS", "REST"},
	{"RESTENDPOINTS.IMAGEBUILDER", "REST_IMAGEBUILDER"},
	{"RESTENDPOINTS.IMAGEBUILDER.PASSWORD", "REST_IMAGEBUILDER_PASSWORD"},
	{"RESTENDPOINTS.IMAGEBUILDER.PROXY", "REST_IMAGEBUILDER_PROXY"},
	{"RESTENDPOINTS.IMAGEBUILDER.PROXY.URL", "REST_IMAGEBUILDER_PROXY_URL"},
	{"RESTENDPOINTS.IMAGEBUILDER.URL", "REST_IMAGEBUILDER_URL"},
	{"RESTENDPOINTS.IMAGEBUILDER.USERNAME", "REST_IMAGEBUILDER_USERNAME"},
	{"RESTENDPOINTS.SOURCES", "REST_SOURCES"},
	{"RESTENDPOINTS.SOURCES.URL", "REST_SOURCES_URL"},
	{"RESTENDPOINTS.SOURCES.USERNAME", "REST_SOURCES_USERNAME"},
	{"RESTENDPOINTS.SOURCES.PASSWORD", "REST_SOURCES_PASSWORD"},
	{"RESTENDPOINTS.SOURCES.PROXY", "REST_SOURCES_PROXY"},
	{"RESTENDPOINTS.SOURCES.PROXY.URL", "REST_SOURCES_PROXY_URL"},
	{"RESTENDPOINTS.TRACEDATA", "REST_TRACE_DATA"},
	{"WORKER", ""},
	{"WORKER.CONCURRENCY", ""},
	{"WORKER.HEARTBEATSEC", "WORKER_HEARTBEAT_SEC"},
	{"WORKER.MAXBEATS", "WORKER_MAX_BEATS"},
	{"WORKER.QUEUE", ""},
}
