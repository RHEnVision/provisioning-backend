name: checks

on:
  push:
    branches:
      - main
  pull_request:

env:
  # this must match the version in mk/0_initial.mk
  GO_SVR: 1.19.6

jobs:
  commit:
    name: "ðŸ’¾ Commit message"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
          path: code
      - uses: actions/checkout@v3
        with:
          repository: "RHEnVision/changelog"
          path: changelog
      - run: pip3 install ./changelog
      - run: |
          make check-commits
        working-directory: code

  linting:
    name: "ðŸŽ¯ Code format, imports and style"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_SVR }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # https://github.com/golangci/golangci-lint-action/issues/535
          version: v1.52.2

  testing:
    name: "ðŸ“Ž Unit tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_SVR }}
      - run: |
          make check-system-go test GO=go

  test-dao:
    name: "ðŸ—„ Integration tests"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: foobar
          POSTGRES_DB: provisioning_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_SVR }}
      - name: "Run tests"
        env:
          DATABASE_USER: postgres
          DATABASE_PASSWORD: foobar
          DATABASE_NAME: provisioning_test
          WORKER_QUEUE: redis
        run: make check-system-go integration-test check-migrations GO=go

  openapi:
    name: "ðŸª† Generated code diff check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_SVR }}
      - run: |
          make check-system-go validate GO=go
