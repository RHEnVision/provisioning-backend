name: build-push
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
concurrency: latest_push
jobs:
  sonarqube:
    name: "ðŸ“¡ SonarQube scan"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # We do not recommend to use this in a pull request. Prefer using pull request
      # decoration instead.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  push:
    name: Container Build & Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: provisioning-backend
          tags: latest ${{ steps.vars.outputs.sha_short }}
          containerfiles: |
            ./build/Dockerfile
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username:  ${{ secrets.QUAY_PUSH_USER }}
          password: ${{ secrets.QUAY_PUSH_SECRET }}

      - name: Push to GitHub Container Repository
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/envision/
