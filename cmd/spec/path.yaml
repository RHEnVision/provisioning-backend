---
openapi: 3.0.0
info:
  description: "THIS API IS IN DEVELOPMENT - ENDPOINTS MIGHT CHANGE"
  license:
    name: GPL-3.0
  title: provisioning-api
  version: 1.0.0

paths:
  /pubkeys/{ID}:
    get:
      operationId: getPubkeyById
      description: >
        A pubkey represents an SSH public portion of a key pair with name and body.
        To find if a pubkey was uploaded to particular cloud, check PubkeyResource resource.
      parameters:
        - name: ID
          in: path
          required: true
          description: 'Database ID of resource.'
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: 'Returned on success.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pubkey'
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: '#/components/responses/InternalError'
    delete:
      operationId: removePubkeyById
      description: >
        A pubkey represents an SSH public portion of a key pair with name and body.
        If a pubkey was uploaded to one or more clouds, the deletion request will
        attempt to delete those SSH keys from all clouds. This means in order to delete
        a pubkey the account must have valid credentials to all cloud accounts the pubkey
        was uploaded to, otherwise the delete operation will fail and the pubkey will
        not be deleted from Provisioning database.
      parameters:
        - name: ID
          in: path
          required: true
          description: 'Database ID of resource.'
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: 'Returned on success.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pubkey'
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: '#/components/responses/InternalError'
  /pubkeys:
    post:
      operationId: createPubkey
      description: >
        A pubkey represents an SSH public portion of a key pair with name and body.
        When pubkey is created, it is stored in the Provisioning database. Pubkeys are
        uploaded to clouds when an instance is launched.
      responses:
        '200':
          description: 'Returned on success.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v1.Pubkey'
        "500":
          $ref: '#/components/responses/InternalError'
    get:
      operationId: getPubkeyList
      description: >
        A pubkey represents an SSH public portion of a key pair with name and body.
        This operation returns list of all pubkeys for particular account.
      responses:
        '200':
          description: 'Returned on success.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v1.Pubkey'
        "500":
          $ref: '#/components/responses/InternalError'
  /sources:
    get:
      description: 'Return list of provisioning sources'
      operationId: getSourceList
      responses:
        '200':
          description: Returned on success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/v1.Source'
        '500':
          $ref: "#/components/responses/InternalError"
  /sources/{ID}:
    get:
      description: 'Return a provisioning source by id'
      operationId: getSourceById
      parameters:
        - name: ID
          in: path
          required: true
          description: 'Source ID from Sources Database.'
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Return on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Source'
        '404':
          $ref: "#/components/responses/NotFound"
        '500':
          $ref: "#/components/responses/InternalError"
  /instance_types/{source_id}:
      get:
        description: 'Return a list of instance types'
        operationId: getInstanceTypeList
        parameters:
          - name: source_id
            in: path
            required: true
            description: 'Source ID from Sources Database.'
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: Return on success.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/v1.InstanceType'
          '404':
            $ref: "#/components/responses/NotFound"
          '500':
            $ref: "#/components/responses/InternalError"
