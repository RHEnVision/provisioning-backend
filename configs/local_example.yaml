# Example configuration, copy file as "local.yaml" and edit as needed.

# Postgres
database:
  host: localhost
  port: 5432
  name:
  user:
  password:
  maxOpenConn: 25
  maxIdleConn: 20
  maxLifetime: 5m
  maxIdletime: 10m
  # 1-none, 2-error, 3-warn, 4-info, 5-debug, 6-trace
  loglevel: 1

logging:
  # Overall log level (-1 trace, 0 debug, 1 info ... 5 panic)
  level: 1
  # Write logs to standard output in human-readable form
  stdout: false
  # Truncate log fields to specific size, only useful for development to keep
  # the standard output clean and human-readable. Set to zero or comment out
  # to disable.
  maxField: 0

# AWS provisioning account (EC2, STS...)
aws:
  key:
  secret:
  session:
  # instance name prefix for all VMs created via the app
  #instancePrefix:

# AWS CloudWatch logger
cloudwatch:
  enabled: false
  region: us-east-1
  key:
  secret:
  session:
  group: group
  stream: stream

restEndpoints:
  # complete request and response logging (do not use in production)
  traceData: false
  imageBuilder:
    url: https://xxx.stage.redhat.com/api/image-builder/v1
    # basic auth and proxy is only useful for development against stage
    username: stage-account
    password: only_for_development
    proxy:
      url: http://squid.xxx.redhat.com:3128
  sources:
    url: https://xxx.stage.redhat.com/api/sources/v3.1
    # basic auth and proxy is only useful for development against stage
    username: stage-account
    password: only_for_development
    proxy:
      url: http://squid.xxx.redhat.com:3128

featureFlags:
  # development or production
  environment: development
  # When panic error is not rescued, exit the application instead of returning 500.
  exitOnPanic: false

worker:
  # memory, sqs or postrges
  queue: postgres
  # amount of goroutines for processing (CPU cores or more)
  concurrency: 50
  # heartbeat update rate (seconds)
  heartbeatSec: 30
  # maximum amount of heartbeat updates
  maxBeats: 10
  # run workers as part of API backend (not for production)
  inprocess: false
